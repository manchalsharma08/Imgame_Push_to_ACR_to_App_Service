# Docker
# Build a Docker image
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- main
- dev
pool: default

resources:
- repo: self

variables:
  imageName: 'image-$(Build.Repository.Name):$(Build.SourceBranchName)-$(Build.BuildId)'

stages:
- stage: Build
  displayName: Build image & Deploy
  jobs:
  - job: Build
    displayName: Build & Deploy
  
    steps:
    - task: Docker@0
      displayName: 'Build an image'
      inputs:
        containerregistrytype: 'Azure Container Registry'
        azureSubscription: 'ACR-K8S-SC-Devopsjio'
        azureContainerRegistry: '{"loginServer":"acrado1111.azurecr.io", "id" : "/subscriptions/cdad125a-4251-4921-9b54-69011bb91811/resourceGroups/aks-ado-rg/providers/Microsoft.ContainerRegistry/registries/acrado1111"}'
        action: 'Build an image'
        dockerFile: 'Dockerfile'
        imageName: '$(imageName)'
    - task: Docker@0
      displayName: 'Push an image'
      inputs:
        containerregistrytype: 'Azure Container Registry'
        azureSubscription: 'ACR-K8S-SC-Devopsjio'
        azureContainerRegistry: '{"loginServer":"acrado1111.azurecr.io", "id" : "/subscriptions/cdad125a-4251-4921-9b54-69011bb91811/resourceGroups/aks-ado-rg/providers/Microsoft.ContainerRegistry/registries/acrado1111"}'
        action: 'Push an image'
        imageName: '$(imageName)'
    - task: AzureWebAppContainer@1
      displayName: 'Deploy: avin-docker-dev'
      inputs:
        azureSubscription: 'ACR-K8S-SC-Devopsjio'
        appName: 'avin-docker-dev'
        containers: 'avinacr.azurecr.io/$(imageName)'
      condition: eq(variables['Build.SourceBranchName'], 'dev')
      
    - task: AzureWebAppContainer@1
      displayName: 'Deploy: avin-docker-qa'
      inputs:
        azureSubscription: 'ACR-K8S-SC-Devopsjio'
        appName: 'avin-docker-qa'
        containers: 'avinacr.azurecr.io/$(imageName)'
      condition: eq(variables['Build.SourceBranchName'], 'main')

       
